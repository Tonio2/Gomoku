-include .env
export

# Directories
SRCDIR = src
INCDIR = include
OBJDIR = obj

# Compiler settings
CXX = g++
CXXFLAGS = -Wall -I$(INCDIR) -DDEPTH=$(DEPTH) -std=c++17

# Mode configuration: Default is performance (PERF)
BUILD_TYPE ?= PERF
ifeq ($(BUILD_TYPE),DEBUG)
	CXXFLAGS += -pg -g # Debug flags
else
	CXXFLAGS += -O3 -DNDEBUG # Optimize for performance
endif

# Timer configuration: Disabled by default
TIMER ?= OFF
ifeq ($(TIMER),OFF)
	CXXFLAGS += -DNOTIMER # Define NOTIMER to disable timing functionality
endif

# Source and object files
SRCFILES = 	ai/gomoku_ai.cpp \
			ai/gomoku_ai_data.cpp \
			gktool.cpp \
			utils/gomoku_utilities.cpp \
			matrix/Matrix.cpp \
			room/game_room_ai.cpp \
			room/game_room.cpp \
			room/game_room_rule_layer.cpp \
			engine/gomoku_pattern_reconizer.cpp \
			engine/gomoku_engine.cpp \
			timer/Timer.cpp \
			arena/ai_data_mutator.cpp \
			arena/arena.cpp 
SRCS = $(addprefix $(SRCDIR)/, $(SRCFILES))
OBJS = $(SRCS:$(SRCDIR)/%.cpp=$(OBJDIR)/%.o)

# Define the executable file 
MAIN = main

all: $(MAIN)
	echo "Successfully compiled $(MAIN) executable in $(MODE) mode with timer $(TIMER)."

$(MAIN): $(OBJDIR) $(OBJS)
	$(CXX) $(CXXFLAGS) -o $(MAIN) $(OBJS)

$(OBJDIR)/%.o: $(SRCDIR)/%.cpp
	$(CXX) $(CXXFLAGS) -c $< -o $@

$(OBJDIR):
	mkdir -p $(OBJDIR)/ai $(OBJDIR)/matrix $(OBJDIR)/room $(OBJDIR)/engine $(OBJDIR)/timer $(OBJDIR)/arena $(OBJDIR)/utils

clean:
	$(RM) $(OBJS) $(MAIN)

re: clean all